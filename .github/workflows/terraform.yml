name: "Amplifica"

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  AWS_REGION : ${{ secrets.AWS_DEFAULT_REGION }}
  CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
  CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
  CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

jobs:
  infra:
    name: "Pipeline completo"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Format
        id: fmt
        run: terraform -chdir=terraform fmt -check

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::762560579492:role/amplifica-bot
          aws-region: us-east-2

      - name: Terraform Init
        id: init
        run: terraform -chdir=terraform init

      - name: Terraform Validate
        id: validate
        run: terraform -chdir=terraform validate -no-color

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform -chdir=terraform plan -no-color
        continue-on-error: true

      - name: Update Pull Request
        uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        id: tfapply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform -chdir=terraform apply -auto-approve

      - name: Wait for Server
        run: sleep 10

      - name: Add Known Hosts
        id: recover_known_host
        run: echo "::set-output name=KHOST::$(ssh-keyscan -H amplifica.azmina.com.br)"
        continue-on-error: true

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        env:
          KHOST: ""
        with:
          key: ${{ secrets.SSH_PRIV_KEY }}
          known_hosts: ${{ steps.recover_known_host.outputs.KHOST }}

      - name: Copy R Crawler App
        id: rCrawler
        run: rsync -avz src/crawler amplifica@amplifica.azmina.com.br:/home/amplifica/

      - name: Copy Shiny App
        id: shinyapp
        run: rsync -avz src/dashboard/* shiny@amplifica.azmina.com.br:/src/shiny-server/amplifica/
